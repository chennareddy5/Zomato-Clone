pipeline {
    agent any
    tools {
        jdk 'JDK'
        nodejs 'NodeJS'
    }
    environment {
        SCANNER_HOME = tool 'Sonar-scanner'
    }
    stages {
        stage('clean workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/chennareddy5/Zomato-Clone.git'
            }
        }
        stage("Sonarqube Analysis ") {
            steps {
                withSonarQubeEnv('sonar') {
                    sh """ 
                    ${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectName=zomato \
                    -Dsonar.projectKey=zomato 
                    """
                }
            }
        }
        stage("quality gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'OSWAP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Docker-credentials', toolName: 'Docker') {   
                        sh "docker build -t zomato ."
                        sh "docker tag zomato chennareddy12/zomato:latest "
                        sh "docker push chennareddy12/zomato:latest "
                    }
                }
            }
        }
        stage("TRIVY") {
            steps {
                sh "trivy image chennareddy12/zomato:latest > trivy.txt" 
            }
        }
        stage('Deploy to container') {
            steps {
                sh 'docker run -d --name zomato -p 3000:3000 chennareddy12/zomato:latest'
            }
        }
    }
}
