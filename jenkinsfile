pipeline {
    agent any
    tools {
        jdk 'JDK'
        nodejs 'NodeJS'
    }
    environment {
        SCANNER_HOME = tool 'Sonar-Scanner'
    }
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/chennareddy5/Zomato-Clone.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh """ 
                    ${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectName=zomato \
                    -Dsonar.projectKey=zomato 
                    """
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('OWASP FS Scan') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'OSWAP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs . > trivyfs.txt'
            }
        }
        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Docker-credentials') {   
                        sh 'docker build -t zomato .'
                        sh 'docker tag zomato chennareddy12/zomato:latest'
                        sh 'docker push chennareddy12/zomato:latest'
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh 'trivy image chennareddy12/zomato:latest > trivy.txt'
            }
        }
        stage('Deploy to Container') {
            steps {
                sh 'docker run -d --name zomato -p 3000:3000 chennareddy12/zomato:latest'
            }
        }
    }
}
